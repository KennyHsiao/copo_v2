syntax = "v1"

info(
	title: "type title here"
	desc: "type desc here"
	author: "type author here"
	email: "type email here"
	version: "type version here"
)

type ProxyPayOrderRequest {
	AccessType   string `json:"accessType" validate:"max=2"`
	MerchantId   string `json:"merchantId" valiate: "required"`
	Sign         string `json:"sign" valiate: "required"`
	NotifyUrl    string `json:"notifyUrl" validate: "required"`
	Language     string `json:"language" valiate: "required"`
	//========请求参数(業務參數)===========
	OrderNo      string `json:"orderNo" validate: "required"`
	BankId       string `json:"bankId" validate: "required"`
	BankName     string `json:"bankName" validate: "required"`
	BankProvince string `json:"bankProvince" validate: "required"`
	BankCity     string `json:"bankCity" validate: "required"`
	BranchName   string `json:"branchName, optional"`
	BankNo       string `json:"bankNo" valiate: "required"`
	OrderAmount  float64 `json:"orderAmount" validate: "required"` //到小數兩位
	DefrayName   string `json:"defrayName" validate: "required"`
	DefrayId     string `json:"defrayId, optional"`
	DefrayMobile string `json:"defrayMobile, optional"`
	DefrayEmail  string `json:"defrayEmail, optional"`
	Currency     string `json:"currency" validate: "required"`
	PayTypeSubNo string `json:"payTypeSubNo,optional"`
}

type ProxyPayOrderResponse struct{
	RespCode    string `json:"respCode"`
	RespMsg     string `json:"respMsg"`
	MerchantId  string `json:"merchantId"`
	OrderNo     string `json:"orderNo"`
	PayOrderNo  string `json:"payOrderNo"`
	OrderStatus string `json:"orderStatus"`
	Sign        string `json:"sign"`
}

type ProxyPayOrderQueryRequest struct{
	AccessType string `json:"accessType" valiate: "required"`
	MerchantId	string `json:"merchantId" valiate: "required"`
	OrderNo string `json:"orderNo" valiate: "required"`
	Sign string `json:"sign" valiate: "required"`
	Language string `json:"language" valiate: "required"`
}

type ProxyPayOrderQueryResponse  struct{
	RespCode string `json:"respCode"`
	RespMsg string `json:"respMsg"`
	MerchantId string `json:"merchantId"`
	OrderNo string `json:"orderNo"`
	LastUpdateTime string `json:"lastUpdateTime"`
	PayOrderNo string `json:"payOrderNo"`
	OrderStatus string `json:"orderStatus"`
	CallbackStatus string `json:"callbackStatus"`
	OrderAmount string `json:"orderAmount"`
	Fee string `json:"fee"`
	Sign string `json:"sign"`
}

@server(
	jwt: Auth
	group: proxypayorder
	prefix: api/v1/dior/merchant-api
)
service boadmin-api {
	@handler ProxyPayOrderHandler
	post /proxy-order (ProxyPayOrderRequest) returns (ProxyPayOrderResponse)

	@handler ProxyPayQueryHandler
	post /proxy-query (ProxyPayOrderQueryRequest) returns (ProxyPayOrderQueryResponse)
}